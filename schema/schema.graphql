type Query {
  artist(artistId: ID!): Artist
}

type Mutation {
  signup(username: String!, email: String!, password: String!): AuthPayload
  login(email: String!, password: String!): AuthPayload
}

type User {
  id: ID!
  username: String!
  email: String!
  password: String!
}

type AuthPayload {
  token: String
  user: User
}

type DiscogsData {
  artist: Artist
  label: Label
  search: [searchResult]!
}
union searchResult = Artist | Label

type Artist {
  artistId: ID!
  name: String
  nameVariation: [String]
  aliases: [Alias]!
  groups: [Group]!
  profile: String
  websites: [String]!
  imageUrl: String
  releases: [Release]
}

type Alias {
  id: ID!
  name: String
  resourceUrl: String
}

type Group {
  id: ID!
  name: String
  resourceUrl: String
  active: Boolean
}

type Release {
  releaseId: ID!
  title: String
}

type Label {
  id: ID!
  name: String
}
